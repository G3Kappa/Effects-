Def 0(Var) SetFlag Var false End
Def 1(Var) SetFlag Var true  End

Def Get(Var) Flag Var End 
Def Set(Var, Value) Value(Var) End 

Def NthBit(Var, Bit) "Var_Bit" End
Def GetBit(Var, Bit) Get(NthBit(Var, Bit)) End
Def SetBit(Var, Bit, Value) Set(NthBit(Var, Bit), Value) End

Def BInc(A, Carry)
  FirstSuccessful {
    Filter Not Get(A) Set(A, 1)
    Chain { Set(A, 0) Carry }
  }
End

Def BDec(A, Carry)
  FirstSuccessful {
    Filter Get(A) Set(A, 0)
    Chain { Set(A, 1) Carry }
  }
End

Def BAdd(A, B, Cont)
  FirstSuccessful {
    Filter And { Not Get(A) Not Get(B) Flag "_carry" } Chain { Set(A, 1) SetFlag "_carry" false }
    Filter And { Not Get(A) Get(B) Not Flag "_carry" } Chain { Set(A, 1) }
    Filter And { Get(A) Not Get(B) Flag "_carry" } Chain { Set(A, 0) }
    Filter And { Get(A) Get(B) Not Flag "_carry" } Chain { Set(A, 0) SetFlag "_carry" true }
  }
  Cont
End

Def BSub(A, B, Cont)
  FirstSuccessful {
    Filter And { Not Get(A) Not Get(B) Flag "_borrow" } Chain { Set(A, 1) }
    Filter And { Not Get(A) Get(B) Not Flag "_borrow" } Chain { Set(A, 1) SetFlag "_borrow" true }
    Filter And { Get(A) Not Get(B) Flag "_borrow" } Chain { Set(A, 0) SetFlag "_borrow" false }
    Filter And { Get(A) Get(B) Not Flag "_borrow" } Chain { Set(A, 0) }
  }
  Cont
End

Def BCpy(A, B)
  FirstSuccessful {
    Filter Get(A) Set(B, 1)
    Set(B, 0)
  }
End

Def BEq(A, B) Not xor(Get(A), Get(B)) End
Def BGt(A, B) And { Get(A) Not Get(B) } End
Def BLt(A, B) And { Not Get(A) Get(B) } End
Def BGte(A, B) Get(A) End
Def BLte(A, B) Not Get(A) End