# Guarantees that each available direction is chosen randomly without altering throughput when there's fewer than 4 available directions
Def Permutate(A, B, C, D)
  ChooseRandom {
    FirstSuccessful { A B C D }
    FirstSuccessful { B C D A }
    FirstSuccessful { C D A B }
    FirstSuccessful { D A B C }
  }
End

Def PlaceMaterialOrItem(Material, Item)
  if(Not IsSlag()) {
    if(Or { IsBelt() IsMachine() }) {
      PlaceFurniture Material
      Write1("_MOVED")
    }
    else() {
      # DropItems { Item } 1
      # Write1("_MOVED")
    }
    endif()
  }
  endif()
End

Def SlagUpdate(MaterialInactive, MaterialActive, Item)
    Chain {
        if(Not NoPower()) {
            Write0("_MOVED")
            FirstSuccessful {
                Filter FurnitureType "snta_belt_ew_empty" Chain { NthNeighbor(0x2(), PlaceMaterialOrItem(MaterialActive, Item)) }
                Filter FurnitureType "snta_belt_sn_empty" Chain { NthNeighbor(0x4(), PlaceMaterialOrItem(MaterialActive, Item)) }
                Filter FurnitureType "snta_belt_ns_empty" Chain { NthNeighbor(0x6(), PlaceMaterialOrItem(MaterialInactive, Item)) }
                Filter FurnitureType "snta_belt_we_empty" Chain { NthNeighbor(0x8(), PlaceMaterialOrItem(MaterialInactive, Item)) }
                Filter IsMachine() Chain { LoadOutputOntoBelt(MaterialInactive, Write1("_MOVED")) }
            }
            if(Is1("_MOVED")) {
              DrainPower(0x1())
              RemoveFurniture MaterialActive
            }
            endif()
        }
        endif()
    }
End

Def IsBelt()
    Or { 
        FurnitureType "snta_belt_ns_empty" 
        FurnitureType "snta_belt_ew_empty" 
        FurnitureType "snta_belt_we_empty" 
        FurnitureType "snta_belt_sn_empty" 
    }
End

Def InputAvailable(Body)
  Chain {
    Write0("_O")
    NthNeighbor(0x2(), Filter And { IsSlag() FurnitureType "snta_belt_we_empty" } Write1("_O"))
    NthNeighbor(0x4(), Filter And { IsSlag() FurnitureType "snta_belt_ns_empty" } Write1("_O"))
    NthNeighbor(0x6(), Filter And { IsSlag() FurnitureType "snta_belt_sn_empty" } Write1("_O"))
    NthNeighbor(0x8(), Filter And { IsSlag() FurnitureType "snta_belt_ew_empty" } Write1("_O"))
    if(Is1("_O")) {
      Body
    }
    endif()
  }
End

Def OutputAvailable(Body)
  Chain {
    Write0("_O")
    NthNeighbor(0x2(), Filter And { Not IsSlag() FurnitureType "snta_belt_ew_empty" } Write1("_O") )
    NthNeighbor(0x4(), Filter And { Not IsSlag() FurnitureType "snta_belt_sn_empty" } Write1("_O") )
    NthNeighbor(0x6(), Filter And { Not IsSlag() FurnitureType "snta_belt_ns_empty" } Write1("_O") )
    NthNeighbor(0x8(), Filter And { Not IsSlag() FurnitureType "snta_belt_we_empty" } Write1("_O") )
    if(Is1("_O")) {
      Body
    }
    endif()
  }
End

Def ForEachInputBelt(Body)
  Chain {
    NthNeighbor(0x2(), Filter And { IsSlag() FurnitureType "snta_belt_we_empty" } Body)
    NthNeighbor(0x4(), Filter And { IsSlag() FurnitureType "snta_belt_ns_empty" } Body)
    NthNeighbor(0x6(), Filter And { IsSlag() FurnitureType "snta_belt_sn_empty" } Body)
    NthNeighbor(0x8(), Filter And { IsSlag() FurnitureType "snta_belt_ew_empty" } Body)
  }
End

Def ForEachOutputBelt(Body)
  Chain {
    NthNeighbor(0x2(), Filter And { Not IsSlag() FurnitureType "snta_belt_ew_empty" } Body)
    NthNeighbor(0x4(), Filter And { Not IsSlag() FurnitureType "snta_belt_sn_empty" } Body)
    NthNeighbor(0x6(), Filter And { Not IsSlag() FurnitureType "snta_belt_ns_empty" } Body)
    NthNeighbor(0x8(), Filter And { Not IsSlag() FurnitureType "snta_belt_we_empty" } Body)
  }
End

Def ForEachInputBelt(BodyBefore, BodyAfter)
  Chain {
    NthNeighbor(0x2(), Filter And { IsSlag() FurnitureType "snta_belt_we_empty" } BodyBefore)
    NthNeighbor(0x4(), Filter And { IsSlag() FurnitureType "snta_belt_ns_empty" } BodyBefore)
    NthNeighbor(0x6(), Filter And { IsSlag() FurnitureType "snta_belt_sn_empty" } BodyAfter)
    NthNeighbor(0x8(), Filter And { IsSlag() FurnitureType "snta_belt_ew_empty" } BodyAfter)
  }
End

Def ForEachOutputBelt(BodyBefore, BodyAfter)
  Chain {
    NthNeighbor(0x2(), Filter And { Not IsSlag() FurnitureType "snta_belt_ew_empty" } BodyBefore)
    NthNeighbor(0x4(), Filter And { Not IsSlag() FurnitureType "snta_belt_sn_empty" } BodyBefore)
    NthNeighbor(0x6(), Filter And { Not IsSlag() FurnitureType "snta_belt_ns_empty" } BodyAfter)
    NthNeighbor(0x8(), Filter And { Not IsSlag() FurnitureType "snta_belt_we_empty" } BodyAfter)
  }
End

Def IsIronSlag()
  Or {
      FurnitureType "technofac_slag_iron" 
      FurnitureType "technofac_slag_iron_inactive" 
  }
End

Def IsGoldSlag()
  Or {
      FurnitureType "technofac_slag_gold" 
      FurnitureType "technofac_slag_gold_inactive" 
  }
End

Def IsStoneSlag()
  Or {
      FurnitureType "technofac_slag_stone" 
      FurnitureType "technofac_slag_stone_inactive" 
  }
End

Def IsAdamantiumSlag()
  Or {
      FurnitureType "technofac_slag_adamantium" 
      FurnitureType "technofac_slag_adamantium_inactive" 
  }
End

Def IsAdoxiumSlag()
  Or {
      FurnitureType "technofac_slag_adoxium" 
      FurnitureType "technofac_slag_adoxium_inactive" 
  }
End

Def IsInferniteSlag()
  Or {
      FurnitureType "technofac_slag_infernite" 
      FurnitureType "technofac_slag_infernite_inactive" 
  }
End

Def IsSlag()
    Or { 
      IsIronSlag()
      IsGoldSlag()
      IsStoneSlag()
      IsAdamantiumSlag()
      IsAdoxiumSlag()
      IsInferniteSlag()
    }
End